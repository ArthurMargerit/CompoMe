- IMPORT: CompoMe_Log.yaml
  
# empty
- TYPE:
    NAME: void
    NATIF: true

# boolean
- TYPE:
    NAME: bool
    DEFINITION: bool
    NATIF: True
    DBUS: "b"

# float/double
- TYPE:
    NAME: float
    DEFINITION: float
    NATIF: True

- TYPE:
    NAME: double
    DEFINITION: double
    NATIF: True
    DBUS: "d"

# int 
- TYPE:
    NAME: i8
    DEFINITION: std::int8_t
    INCLUDE: "<cstdint>"
    DBUS: "y"

- TYPE:
    NAME: i16
    DEFINITION: std::int16_t
    INCLUDE: "<cstdint>"
    DBUS: "n"

- TYPE:
    NAME: i32
    DEFINITION: std::int32_t
    INCLUDE: '<cstdint>'
    DBUS: "i"

- TYPE:
    NAME: i64
    DEFINITION: std::int64_t
    INCLUDE: '<cstdint>'
    DBUS: "x"


# unsigned int
- TYPE:
    NAME: ui8
    DEFINITION: std::uint8_t
    INCLUDE: '<cstdint>'
    DBUS: "y"

- TYPE:
    NAME: ui16
    DEFINITION: std::uint16_t
    INCLUDE: '<cstdint>'
    DBUS: "q"

- TYPE:
    NAME: ui32
    DEFINITION: std::uint32_t
    INCLUDE: '<cstdint>'
    DBUS: "u"

- TYPE:
    NAME: ui64
    DEFINITION: std::uint64_t
    INCLUDE: '<cstdint>'
    DBUS: "t"

# String
# We redefine it to override stream operator (<<,>>) 
- TYPE:
    NAME: CompoMe::String
    DEFINITION: CompoMe::String_d
    INCLUDE: '"Types/CompoMe/String_d.hpp"'
    DBUS: "s"

- TYPE:
    NAME: P
    DYNAMIC: True
    TOSTRING: True
    DEFINITION: "CompoMe::Pointer<T>"
    INCLUDE: '"CompoMe/Pointer.hpp"'
    ARG:
      - T


# std::vector 
- TYPE:
    NAME: Vec
    DYNAMIC: True
    TOSTRING: True
    DEFINITION: "std::vector<T>"
    INCLUDE: "<vector>"
    ARG:
      - T

- TYPE:
    NAME: Map
    DYNAMIC: True
    TOSTRING: True
    DEFINITION: "std::map<K,V>"
    INCLUDE: "<map>"
    ARG:
      - K
      - V

- TYPE:
    NAME: Array
    DYNAMIC: True
    TOSTRING: True
    DEFINITION: "std::array<DATA,NB>"
    INCLUDE: "<array>"
    ARG:
      - DATA
      - unsigned long int NB

- TYPE:
    NAME: Pair
    DYNAMIC: True
    TOSTRING: True
    DEFINITION: "std::pair<F,S>"
    INCLUDE: "<array>"
    ARG:
      - F
      - S

- TYPE:
    NAME: Tuple
    DYNAMIC: True
    TOSTRING: True
    DEFINITION: "std::tuple<Args...>"
    INCLUDE: "<tuple>"
    ARG:
      - ...Args

- TYPE:
    NAME: Set
    DYNAMIC: True
    TOSTRING: True
    DEFINITION: "std::set<T>"
    INCLUDE: "<set>"
    ARG:
      - T

# CompoMe Internal Data
- TYPE:
    NAME: CompoMe::Struct_p
    DEFINITION: CompoMe::Struct*
    INCLUDE: '"Structs/Struct.hpp"'

- TYPE:
    NAME: CompoMe::Error_p
    DEFINITION: CompoMe::Error*
    INCLUDE: '"Errors/Error.hpp"'

- TYPE:
    NAME: CompoMe::Interface_p
    DEFINITION: CompoMe::Interface*
    INCLUDE: '"Interfaces/Interface.hpp"'

- TYPE:
    NAME: CompoMe::Component_p
    DEFINITION: CompoMe::Component*
    INCLUDE: '"Components/Component.hpp"'

- TYPE:
    NAME: CompoMe::Link_p
    DEFINITION: CompoMe::Link*
    INCLUDE: '"Links/Link.hpp"'

- TYPE:
    NAME: CompoMe::Deployment_p
    DEFINITION: CompoMe::Deployment*
    INCLUDE: '"Deployments/Deployment.hpp"'

- TYPE:
    NAME: CompoMe::Component_state
    ENUM:
      INITIALIZED: 1
      CONFIGURED: 2
      CONNECTED: 4
      STARTED: 8
      DEGRADED: 16
      DEAD: 32
      STRESSED: 64
      UNKNOWN: 128
    OPTIONS:
      ENUM_CLS: ui32
      ENUM_FLAGS: true
    INCLUDE:
      - '"Types/ui32.hpp"'

- INTERFACE:
    NAME: CompoMe::Component_Control
    FUNCTION:
      - void step()
      - void start()
      - void stop()
      - void init()
      - void uninit()
      - void connect()
      - void configure()
      - CompoMe::String name()
      - CompoMe::Component_state state()
      - CompoMe::String status()

- ERROR:
    NAME: CompoMe::Component_Core_ns::Wrong_state_transition
    DATA:
      - CompoMe::Component_state from
      - CompoMe::Component_state to
      - CompoMe::String msg

- COMPONENT:
    NAME: CompoMe::Component_Core
    DATA:
      - CompoMe::String name
      - CompoMe::Component_state state
    PROVIDE:
      - CompoMe::Component_Control handle

# - COMPONENT:
#     NAME: CompoMe::Component_Scenario
#     DATA:
#       - CompoMe::String file_sce_path
#       - CompoMe::Map<CompoMe::String,CompoMe::Interface_p> interface
#     FUNCTION:
#       - void add_interface(CompoMe::Interface_p> p_i)
#       - void remove_interface(CompoMe::Interface_p> p_i)
